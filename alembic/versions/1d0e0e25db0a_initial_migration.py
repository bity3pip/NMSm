"""Initial migration

Revision ID: 1d0e0e25db0a
Revises: 
Create Date: 2025-03-28 17:31:19.928623

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1d0e0e25db0a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_note_versions_id', table_name='note_versions')
    op.drop_index('ix_note_versions_version_number', table_name='note_versions')
    op.drop_table('note_versions')
    op.drop_index('ix_notes_id', table_name='notes')
    op.drop_index('ix_notes_title', table_name='notes')
    op.drop_table('notes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('notes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='notes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_notes_title', 'notes', ['title'], unique=False)
    op.create_index('ix_notes_id', 'notes', ['id'], unique=False)
    op.create_table('note_versions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('note_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('version_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['note_id'], ['notes.id'], name='note_versions_note_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='note_versions_pkey')
    )
    op.create_index('ix_note_versions_version_number', 'note_versions', ['version_number'], unique=False)
    op.create_index('ix_note_versions_id', 'note_versions', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    # ### end Alembic commands ###
